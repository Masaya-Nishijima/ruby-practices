require_relative '../lib/game'

RSpec.describe "ゲーム" do
  # 入力の切りわけ
  describe "文字列の入力をフレームごと配列化" do
    context "ストライクがない場合" do
      it "1,1,2,2,3,3,4,4,5,5,6,0,7,0,8,0,9,0,0,0" do
        game = Game.new("1,1,2,2,3,3,4,4,5,5,6,0,7,0,8,0,9,0,0,0")
        expect(game.score_board).to eq [[1,1],[2,2],[3,3],[4,4],[5,5],[6,0],[7,0],[8,0],[9,0],[0,0]]
      end
    end

    context "ストライクがある場合(3投はなし)" do
      it "X,2,2,3,3,4,4,5,5,6,0,7,0,8,0,9,0,0,0" do
        game = Game.new("X,2,2,3,3,4,4,5,5,6,0,7,0,8,0,9,0,0,0")
        expect(game.score_board).to eq [['X',nil],[2,2],[3,3],[4,4],[5,5],[6,0],[7,0],[8,0],[9,0],[0,0]]
      end
      it "X,2,2,3,3,4,4,5,5,6,0,7,0,8,0,X,0,0" do
        game = Game.new("X,2,2,3,3,4,4,5,5,6,0,7,0,8,0,X,0,0")
        expect(game.score_board).to eq [['X',nil],[2,2],[3,3],[4,4],[5,5],[6,0],[7,0],[8,0],['X',nil],[0,0]]
      end
    end
    
    context "10投目が3球" do
      it "1,1,2,2,3,3,4,4,5,5,6,0,7,0,8,0,9,0,5,5,5" do
        game = Game.new("1,1,2,2,3,3,4,4,5,5,6,0,7,0,8,0,9,0,5,5,5")
        expect(game.score_board).to eq [[1,1],[2,2],[3,3],[4,4],[5,5],[6,0],[7,0],[8,0],[9,0],[5,5,5]]
      end
      it "1,1,2,2,3,3,4,4,5,5,6,0,7,0,8,0,9,0,X,5,5" do
        game = Game.new("1,1,2,2,3,3,4,4,5,5,6,0,7,0,8,0,9,0,X,5,5")
        expect(game.score_board).to eq [[1,1],[2,2],[3,3],[4,4],[5,5],[6,0],[7,0],[8,0],[9,0],['X',5,5]]
      end
    end
  end
  # ストライク・スペアの無い試合
  # ストライク・スペアがある試合
  # 10フレーム目が三投の試合
end
